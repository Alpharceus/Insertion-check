#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define N 8

void insertionsort(int a[], int n, int *comparisons) {
  int i, j, key;
  for (i = 1; i < n; i++) {
    key = a[i];
    j = i - 1;
    *comparisons += 1;
    while (j >= 0 && a[j] > key) {
      a[j + 1] = a[j];
      j = j - 1;
      *comparisons += 1;
    }
    a[j + 1] = key;
  }
}

int factorial(int n) {
  int result = 1;
  for (int i = 1; i <= n; i++) {
    result *= i;
  }
  return result;
}

void permute(int *a, int l, int r, int *comparisons) {
  int i;
  if (l == r) {
    insertionsort(a, N, comparisons);
  } else {
    for (i = l; i <= r; i++) {
      int temp = a[l];
      a[l] = a[i];
      a[i] = temp;
      permute(a, l + 1, r, comparisons);
      temp = a[l];
      a[l] = a[i];
      a[i] = temp;
    }
  }
}

int main() {
  int a[N] = {1, 2, 3, 4, 5, 6, 7, 8};
  int comparisons = 0;
  int total_comparisons = 0;
  int permutations = factorial(N);

  srand(time(NULL));

  permute(a, 0, N - 1, &total_comparisons);
  printf("Average comparisons: %d\n", total_comparisons / permutations);
  return 0;
}
